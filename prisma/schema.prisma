generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bill {
  id        String     @id @default(uuid())
  tableId   String?
  people    Int?
  total     Float      @default(0)
  paid      Float      @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  closedAt  DateTime?
  table     Table?     @relation(fields: [tableId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  billItems BillItem[]

  @@map("bill")
}

model BillItem {
  id          String        @id @default(uuid())
  billId      String
  productId   String?
  menuId      String?
  price       Float         @default(0)
  quantity    Int           @default(0)
  note        String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  bill        Bill          @relation(fields: [billId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product     Product?      @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menu        Menu?         @relation(fields: [menuId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  billSubItem BillSubItem[]

  @@map("bill_item")
}

model BillSubItem {
  id         String   @id @default(uuid())
  billItemId String
  sectionId  String
  productId  String
  supplement Float    @default(0)
  quantity   Int      @default(0)
  note       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  billItem BillItem @relation(fields: [billItemId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product  Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  section  Section  @relation(fields: [sectionId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("bill_subitem")
}

model Category {
  id        String    @id @default(uuid())
  name      String
  color     String?
  icon      String?
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("category")
}

model Product {
  id             String           @id @default(uuid())
  name           String
  description    String?
  price          Float            @default(0)
  cost           Float?
  tax            Float?
  stock          Int?
  image          String?
  categoryId     String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  categories     Category?        @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  billItems      BillItem[]
  sectionProduct SectionProduct[]
  BillSubItem    BillSubItem[]

  @@map("product")
}

model User {
  id        String   @id @default(uuid())
  name      String
  hash      String
  role      String   @default("waiter")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Table {
  id         String    @id @default(uuid())
  name       String
  size       Int       @default(0)
  locationId String?
  options    String
  type       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  location   Location? @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bills      Bill[]

  @@map("table")
}

model Location {
  id        String   @id @default(uuid())
  name      String
  position  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tables    Table[]

  @@map("location")
}

model Menu {
  id          String        @id @default(uuid())
  name        String
  active      Boolean       @default(true)
  price       Float         @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  menuSection MenuSection[]
  BillItem    BillItem[]

  @@map("menu")
}

model MenuSection {
  id          String   @id @default(uuid())
  menuId      String
  sectionId   String
  name        String
  maxProducts Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  menu        Menu     @relation(fields: [menuId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  section     Section  @relation(fields: [sectionId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("menuSection")
}

model Section {
  id             String           @id @default(uuid())
  name           String
  description    String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  menuSection    MenuSection[]
  sectionProduct SectionProduct[]
  BillSubItem    BillSubItem[]

  @@map("section")
}

model SectionProduct {
  id         String   @id @default(uuid())
  sectionId  String
  productId  String
  supplement Float    @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  section    Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("sectionProduct")
}
